SYNOPSIS
    use Clipboard; print Clipboard->paste; Clipboard->copy('foo');

    # Clipboard->cut() is an alias for copy(). copy() is the preferred
    # method, because we're not really "cutting" anything.

    Also see the scripts:
        clipaccumulate
        clipbrowse
        clipedit
        clipfilter
        clipjoin

DESCRIPTION
    Who doesn't remember the first time they learned to copy and paste, and
    generated an exponentially growing text document? Yes, that's right,
    clipboards are magical.

    With Clipboard.pm, this magic is now trivial to access,
    cross-platformly, from your Perl code.

STATUS
    Seems to be working well for Linux, OSX, *BSD, and Windows. I use it
    every day on Linux, so I think I've got most of the details hammered out
    (X selections are kind of weird). Please let me know if you encounter
    any problems in your setup.

AUTHOR
    Ryan King <rking@sharpsaw.org>

COPYRIGHT
    Copyright (c) 2005. Ryan King. All rights reserved.

    This program is free software; you can redistribute it and/or modify it
    under the same terms as Perl itself.

    See http://www.perl.com/perl/misc/Artistic.html

